name: 更新天氣資料

on:
  schedule:
    # 每 30 分鐘執行一次 (UTC 時間)
    - cron: '*/30 * * * *'
  workflow_dispatch: # 允許手動觸發

permissions:
  contents: write  # 允許寫入內容和推送

jobs:
  update-weather:
    runs-on: ubuntu-latest
    
    steps:
    - name: 檢出程式碼
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 設定 Python 環境
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: 安裝依賴套件
      run: |
        python -m pip install --upgrade pip
        pip install requests
        
    - name: 建立環境設定檔
      run: |
        echo "CWA_API_KEY=${{ secrets.CWA_API_KEY }}" > .env
        ls -la .env
        
    - name: 抓取天氣資料
      run: |
        echo "當前工作目錄: $(pwd)"
        echo "目錄內容:"
        ls -la
        cd scripts
        echo "scripts 目錄內容:"
        ls -la
        python fetch_weather.py
        cd ..
        echo "執行後根目錄內容:"
        ls -la weather.json || echo "weather.json 不存在"
        
    - name: 檢查是否有變更
      id: check_changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if [ -f weather.json ]; then
          echo "✅ weather.json 檔案存在"
          echo "📊 檔案內容:"
          head -5 weather.json
          
          # 顯示當前 git 狀態
          echo "🔍 添加前的 Git 狀態:"
          git status --porcelain
          
          # 添加檔案
          git add weather.json
          
          echo "� 添加後的 Git 狀態:"
          git status --porcelain
          
          # 檢查暫存區是否有變更
          if git diff --staged --quiet; then
            echo "� 暫存區沒有變更 - 強制更新（確保定期更新）"
            # 強制更新檔案的修改時間以產生變更
            touch weather.json
            git add weather.json
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "📝 有變更需要提交"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi
        else
          echo "❌ weather.json 檔案不存在"
          echo "changes=false" >> $GITHUB_OUTPUT
        fi
        
    - name: 提交並推送變更
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        echo "🔄 準備提交變更..."
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # 確保檔案已添加
        git add weather.json
        git status
        
        # 提交變更
        git commit -m "🌤️ 更新天氣資料 $(date '+%Y-%m-%d %H:%M:%S')"
        
        # 推送變更
        echo "📤 推送變更到遠端..."
        git push
        echo "✅ 推送完成"
        
    - name: 顯示天氣資料
      if: always()
      run: |
        if [ -f weather.json ]; then
          echo "📊 最新天氣資料:"
          cat weather.json
        else
          echo "❌ 天氣資料檔案不存在"
        fi
